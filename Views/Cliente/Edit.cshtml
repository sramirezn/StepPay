@model StepPay.Models.Cliente


@{


    ViewBag.Title = "Edit";
    var clientWithAddress = (StepPay.Models.ClienteWithAddress)ViewBag.clientWithAddress;
}
<div class="col-md-12">
    <div class="container-info">
        @Html.Partial("Mensaje")

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="panel panel-primary">
                <div class="panel-heading">
                    Modificación de Cliente
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.IDCliente)

                        <div class="form-group">
                            @Html.Label("Numero_Identificacion", "Numero Identificacion", new { @class = "control-label col-md-2" })
                            <div class="col-md-10 form-display">
                                @Html.EditorFor(model => model.Numero_Identificacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Numero_Identificacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("NvTipo_Identificacion", "Tipo identificacion", new { @class = "control-label col-md-2" })
                            <div class="col-md-10 form-display">
                                @ViewBag.nvTipoIdentificacion
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Correo_Electronico", "Correo Electronico", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Correo_Electronico, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Correo_Electronico, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IDEmpresa, "Empresa", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(Model => Model.IDEmpresa, ViewBag.Empresa as IEnumerable<SelectListItem>, null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IDEmpresa, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2">
                                <input type="submit" value="Actualizar" class="btn btn-primary" />
                                @Html.ActionLink("Regresar al Inicio", "Index", null, new { @class = "btn btn-info" })


                            </div>
                        </div>



                        <fieldset id="fieldsetAddress">
                            <legend class="fieldsetheader">
                                <span>Direcciones</span>
                                <span>
                                    <button id="btnAddAddress" style="background-color:transparent;" class="btn pull-right ld-ext-left">
                                        <span style="font-size:15px"><i class="fa fa-plus" style="color:#205d97"></i></span>
                                    </button>
                                </span>
                            </legend>
                        </fieldset>
                        <div class="blue-theme font-mid-rem"> <span> <i class="fa fa-info-circle"></i> Verifique la dirección</span></div>
                        @if (clientWithAddress.Addresses.Count > 0)
                        {
                            foreach (var address in clientWithAddress.Addresses)
                            {
                                if (address.Por_Defecto.HasValue && address.Por_Defecto.Value)
                                {
                                    <div class="address addressselected text-justify">
                                        <div class="cntr">
                                            <label class="btn-radio no-center">
                                                <input type="radio" name="addressId" value=@address.IDDireccion checked>
                                                <svg width="15px" height="15px" viewBox="0 0 20 20">
                                                    <circle cx="10" cy="10" r="9"></circle>
                                                    <path d="M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z" class="inner"></path>
                                                    <path d="M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z" class="outer"></path>
                                                </svg>
                                                <span>@address.Direccion1 @address.Provincia</span>
                                            </label>
                                        </div>
                                        <div class="text-right address-icons">

                                            <span class="low-padding">
                                                <a href="@Url.Action("Delete", "Address", new { addressID = address.IDDireccion })" class="deleteAddress"> <span style="font-size:20px"><i class="fa fa-trash" style="color:#0056B8"></i></span></a>
                                            </span>


                                            <span class="low-padding">
                                                <a href="@Url.Action("Edit", "Address", new { addressID = address.IDDireccion, clientID = address.IDCliente })" class="editAddress"><span style="font-size:20px"><i class="fa fa-edit" style="color:#0056B8"></i></span></a>
                                            </span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="address text-justify ">
                                        <div class="cntr">
                                            <label class="btn-radio no-center">
                                                <input type="radio" name="addressId" value=@address.IDDireccion>
                                                <svg width="15px" height="15px" viewBox="0 0 20 20">
                                                    <circle cx="10" cy="10" r="9"></circle>
                                                    <path d="M10,7 C8.34314575,7 7,8.34314575 7,10 C7,11.6568542 8.34314575,13 10,13 C11.6568542,13 13,11.6568542 13,10 C13,8.34314575 11.6568542,7 10,7 Z" class="inner"></path>
                                                    <path d="M10,1 L10,1 L10,1 C14.9705627,1 19,5.02943725 19,10 L19,10 L19,10 C19,14.9705627 14.9705627,19 10,19 L10,19 L10,19 C5.02943725,19 1,14.9705627 1,10 L1,10 L1,10 C1,5.02943725 5.02943725,1 10,1 L10,1 Z" class="outer"></path>
                                                </svg>
                                                <span>@address.Direccion1 @address.Provincia</span>
                                            </label>
                                        </div>
                                        <div class="text-right address-icons display-none">

                                            <span class="low-padding">
                                                <a href="@Url.Action("Delete", "Address", new { addressID = address.IDDireccion })" class="deleteAddress"> <span style="font-size:20px"><i class="fa fa-trash" style="color:#0056B8"></i></span></a>
                                            </span>

                                            <span class="low-padding">
                                                <a href="@Url.Action("Edit", "Address", new { addressID = address.IDDireccion, clientID = address.IDCliente })" class="editAddress"><span style="font-size:20px"><i class="fa fa-edit" style="color:#0056B8"></i></span></a>
                                            </span>
                                        </div>
                                    </div>
                                }
                            }
                        }
                        else
                        {
                            <div class="address"><span class="error">Debe agregar un dirección para proceder con el registro.</span></div>
                        }
                    </div>

                </div>
            </div>

        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/GlobalScript.js"></script>
    <script src="~/Scripts/card.js" type="text/javascript"></script>
}

@section AgilPassCss{
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/awesome-bootstrap-checkbox.css" />
}
